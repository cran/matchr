# Generated by roxygen2: do not edit by hand

S3method("!",Option)
S3method("!",Result)
S3method(Matchply,default)
S3method(Matchply,list)
S3method(enum_type,Enum)
S3method(enum_type,default)
S3method(into_option,"NULL")
S3method(into_option,Option)
S3method(into_option,Result)
S3method(into_option,default)
S3method(into_result,Option)
S3method(into_result,Result)
S3method(into_result,default)
S3method(is.enum_type,Enum)
S3method(is.enum_type,EnumGenerator)
S3method(is.enum_type,default)
S3method(is.variant,Enum)
S3method(is.variant,EnumGenerator)
S3method(is.variant,default)
S3method(match_cond,"(")
S3method(match_cond,"function")
S3method(match_cond,call)
S3method(match_cond,character)
S3method(match_cond,default)
S3method(match_cond,environment)
S3method(match_cond,list)
S3method(match_cond,logical)
S3method(match_cond,matrix)
S3method(match_cond,name)
S3method(match_cond,numeric)
S3method(print,ComposedFunction)
S3method(print,Enum)
S3method(print,EnumGenerator)
S3method(print,Option)
S3method(print,Result)
S3method(print,VariantGenerator)
S3method(unwrap,Enum)
S3method(unwrap,Option)
S3method(unwrap,Result)
S3method(unwrap_or,Enum)
S3method(unwrap_or,Option)
S3method(unwrap_or,Result)
S3method(unwrap_or,default)
S3method(variant,Enum)
S3method(variant,default)
export("%.%")
export("%fn%")
export(Enum)
export(Err)
export(Match)
export(Matchply)
export(Ok)
export(Some)
export(Try)
export(enum_type)
export(fallthrough)
export(into_option)
export(into_result)
export(is.enum)
export(is.enum_type)
export(is.err)
export(is.none)
export(is.ok)
export(is.some)
export(is.variant)
export(match_cond)
export(unwrap)
export(unwrap_or)
export(variant)
importFrom(rlang,`!!`)
importFrom(rlang,eval_bare)
importFrom(rlang,expr)
importFrom(utils,capture.output)
